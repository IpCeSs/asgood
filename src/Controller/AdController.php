<?php

namespace App\Controller;

use App\Entity\Ad;
use App\Form\AdType;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Component\Filesystem\Filesystem;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;


class AdController extends Controller
{
    /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file */
    /**
     * @Route("/publishAdd", name="publish.add")
     */
    public function publishAd(Request $request)
    {

        $ad = new Ad();
        $form = $this->createForm(AdType::class, $ad)->add("save", SubmitType::class, ["label" => "Publish your ad"]);


        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            // sets the date of publication
            $ad->setDateOfPublishing(new \DateTime());
            // sets the user who posted the ad
            $ad->setUser($this->getUser());

            // $file stores the uploaded jpg file

            $file = $form->get('image')->getData();
            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
            // moves the file to the directory where images are stored (in service .yaml parameters)
            $file->move(
                $this->getParameter('images_directory'),
                $fileName
            );

            // updates the 'image' property to store the jpg file name
            // instead of its contents
            $ad->setImage($fileName);


            $em = $this->getDoctrine()->getManager();
            $em->persist($ad);
            $em->flush();

            return $this->redirectToRoute('home');

        }

        return $this->render(
            'ad/publish.html.twig',
            array('form' => $form->createView())
        );
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }


    /**
     *
     * @Route ("/delete/{ad}", name="ad.delete")
     */
    public function delete(Ad $ad)
    {

        $em = $this->getDoctrine()->getManager();

        $fileSystem = new Filesystem();
        $filename = $ad->getImage();
        $fileSystem->remove($this->get('kernel')->getProjectDir() . '/public/uploads/images/' . $filename);

        $em->remove($ad);
        $em->flush();
        return $this->redirectToRoute("home");
    }


    /**
     * @Route ("/update/{ad}", name="ad.update")
     */
    public function update(EntityManagerInterface $em, Ad $ad, Request $request)
    {
        $oldImage=$ad->getImage();
        $form = $this->createForm(AdType::class, $ad)->add('save', SubmitType::class, ["label" => "Update"]);
        $form->handleRequest($request);


        if ($form->isSubmitted() && $form->isValid()) {

            //to delete old image that's gonna be replaced
            $fileSystem = new Filesystem();
            $fileSystem->remove($this->get('kernel')->getProjectDir() . '/public/uploads/images/' . $oldImage);

            // to set new image and record it in folder
            $file = $form->get('image')->getData();
            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
            // moves the file to the directory where images are stored (in service .yaml parameters)
            $file->move(
                $this->getParameter('images_directory'),
                $fileName
            );

            // updates the 'image' property to store the jpg file name
            // instead of its contents
            $ad->setImage($fileName);
            $em->flush();
            return $this->redirectToRoute("home");
        }
        return $this->render("/ad/update.html.twig", ["form" => $form->createView()]);
    }


}
